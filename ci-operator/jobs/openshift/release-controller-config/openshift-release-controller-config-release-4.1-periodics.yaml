##################################################################################
#                                DO NOT EDIT
# File generated during execution of: generate-release-controllers.py
##################################################################################


#---------------------------------------------------------------------------------
# machine_os_content_promotions.py added the following resource
#---------------------------------------------------------------------------------

# The RHCOS build pipeline promotes images to the api.ci rhcos namespace into an is/machine-os-content. 
# In order to validate this image and promote it into the actual release payloads (ART and CI), this
# job runs tests against the machine-os-content image and then pushes it to the various locations to begin using it.
agent: kubernetes
cluster: api.ci
decorate: true
hidden: false
interval: 15m
labels:
  ci.openshift.io/release-type: informing
  job-release: '4.1'
name: promote-release-openshift-machine-os-content-e2e-aws-4.1
spec:
  containers:
  - args:
    - --artifact-dir=$(ARTIFACTS)
    - --kubeconfig=/etc/apici/kubeconfig
    - --lease-server-password-file=/etc/boskos/password
    - --lease-server-username=ci
    - --lease-server=https://boskos-ci.svc.ci.openshift.org
    - --secret-dir=/usr/local/pull-secret
    - --secret-dir=/usr/local/e2e-aws-cluster-profile
    - --template=/usr/local/e2e-aws
    - --input-hash=$(BUILD_ID) --input-hash=$(JOB_NAME)
    - --promote
    command:
    - /bin/bash
    - -c
    - |2

      #!/bin/bash
      set -euo pipefail

      # NOTE: This is generated bash. This is why you will see literals compared against other literals.

      # prow doesn't allow init containers or a second container
      export PATH=$PATH:/tmp/bin
      mkdir /tmp/bin
      curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.5/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
      chmod ug+x /tmp/bin/oc

      # if the source and destination are identical, do nothing
      from=$( oc get istag --ignore-not-found -n "rhcos" "machine-os-content:4.1" -o template='{{ .image.metadata.name }}' )

      if [[ -z "$from" ]]; then
          echo "There is currently no rhcos istag/machine-os-content:4.1 image available"
          if [[ "x86_64" == "x86_64" ]]; then
              echo "error: This is an error for x86_64 for visibility"
              exit 1
          else
              echo "info: This is not considered an error since the arch may not be building for this release"
              exit 0
          fi
      fi

      to=$( oc get istag --ignore-not-found -n ocp "4.1-art-latest:machine-os-content" -o template='{{ .image.metadata.name }}' )
      if [[ "$from" == "$to" ]]; then
          echo "info: rhcos istag/machine-os-content:4.1 matches ocp istag/4.1-art-latest:machine-os-content (currently $to); no action necessary"
          exit 0
      fi
      echo "Will promote rhcos istag/machine-os-content:4.1 ($from), to ocp istag/4.1-art-latest:machine-os-content (currently value: $to)"

      # error out if the image isn't on quay
      to_quay="quay.io/openshift-release-dev/ocp-v4.0-art-dev@$from"
      if ! oc image info -a "/usr/local/pull-secret/.dockerconfigjson" "$to_quay"; then
          echo "error: The source image has not been pushed to quay; missing $to_quay"
          exit 1
      fi

      # verify the tests pass
      ci-operator $@

      # also tag the image into the art-latest stream
      oc tag "$to_quay" "ocp/4.1-art-latest:machine-os-content"

      if [[ "False" == "True" && "x86_64" == "x86_64"]]; then
          # also tag the image into the ocp private stream
          oc tag "$to_quay" "ocp-private/4.1-priv:machine-os-content"
      fi
    env:
    - name: CLUSTER_TYPE
      value: aws
    - name: CONFIG_SPEC
      value: |
        base_images:
          machine-os-content:
            name: machine-os-content
            namespace: rhcos
            tag: '4.1'
        build_root:
          image_stream_tag:
            name: release
            namespace: openshift
            tag: golang-1.12
        promotion:
          additional_images:
            machine-os-content: machine-os-content
          name: '4.1'
          namespace: ocp
        raw_steps:
        - output_image_tag_step:
            from: machine-os-content
            to:
              name: stable
              tag: machine-os-content
        resources:
          '*':
            limits:
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 200Mi
        tag_specification:
          name: '4.1'
          namespace: ocp
        tests:
        - as: e2e-aws
          commands: TEST_SUITE=openshift/conformance/parallel run-tests
          openshift_installer:
            cluster_profile: aws
    - name: JOB_NAME_SAFE
      value: e2e-aws
    - name: TEST_COMMAND
      value: TEST_SUITE=openshift/conformance/parallel run-tests
    image: ci-operator:latest
    imagePullPolicy: Always
    name: ''
    resources:
      requests:
        cpu: 10m
    volumeMounts:
    - mountPath: /etc/apici
      name: apici-ci-operator-credentials
      readOnly: true
    - mountPath: /etc/boskos
      name: boskos
      readOnly: true
    - mountPath: /usr/local/e2e-aws-cluster-profile
      name: cluster-profile
    - mountPath: /usr/local/e2e-aws
      name: job-definition
      subPath: cluster-launch-installer-e2e.yaml
    - mountPath: /usr/local/pull-secret
      name: release-pull-secret
  serviceAccountName: ci-operator
  volumes:
  - name: apici-ci-operator-credentials
    secret:
      items:
      - key: sa.ci-operator.apici.config
        path: kubeconfig
      secretName: apici-ci-operator-credentials
  - name: boskos
    secret:
      items:
      - key: password
        path: password
      secretName: boskos-credentials
  - name: cluster-profile
    projected:
      sources:
      - secret:
          name: cluster-secrets-aws
  - configMap:
      name: prow-job-cluster-launch-installer-e2e
    name: job-definition
  - name: pull-secret
    secret:
      secretName: regcred
  - name: release-pull-secret
    secret:
      secretName: ci-pull-credentials
---
#---------------------------------------------------------------------------------
# machine_os_content_promotions.py added the following resource
#---------------------------------------------------------------------------------

# The RHCOS build pipeline promotes images to the api.ci rhcos namespace into an is/machine-os-content. 
# In order to validate this image and promote it into the actual release payloads (ART and CI), this
# job runs tests against the machine-os-content image and then pushes it to the various locations to begin using it.
agent: kubernetes
cluster: api.ci
decorate: true
hidden: false
interval: 15m
labels:
  ci.openshift.io/release-type: informing
  job-release: '4.1'
name: promote-release-openshift-machine-os-content-e2e-aws-4.1-s390x
spec:
  containers:
  - args:
    - --artifact-dir=$(ARTIFACTS)
    - --kubeconfig=/etc/apici/kubeconfig
    - --lease-server-password-file=/etc/boskos/password
    - --lease-server-username=ci
    - --lease-server=https://boskos-ci.svc.ci.openshift.org
    - --secret-dir=/usr/local/pull-secret
    - --secret-dir=/usr/local/e2e-aws-cluster-profile
    - --template=/usr/local/e2e-aws
    - --input-hash=$(BUILD_ID) --input-hash=$(JOB_NAME)
    - --promote
    command:
    - /bin/bash
    - -c
    - |2

      #!/bin/bash
      set -euo pipefail

      # NOTE: This is generated bash. This is why you will see literals compared against other literals.

      # prow doesn't allow init containers or a second container
      export PATH=$PATH:/tmp/bin
      mkdir /tmp/bin
      curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.5/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
      chmod ug+x /tmp/bin/oc

      # if the source and destination are identical, do nothing
      from=$( oc get istag --ignore-not-found -n "rhcos" "machine-os-content:4.1" -o template='{{ .image.metadata.name }}' )

      if [[ -z "$from" ]]; then
          echo "There is currently no rhcos istag/machine-os-content:4.1 image available"
          if [[ "s390x" == "x86_64" ]]; then
              echo "error: This is an error for x86_64 for visibility"
              exit 1
          else
              echo "info: This is not considered an error since the arch may not be building for this release"
              exit 0
          fi
      fi

      to=$( oc get istag --ignore-not-found -n ocp-s390x "4.1-art-latest:machine-os-content" -o template='{{ .image.metadata.name }}' )
      if [[ "$from" == "$to" ]]; then
          echo "info: rhcos istag/machine-os-content:4.1 matches ocp-s390x istag/4.1-art-latest:machine-os-content (currently $to); no action necessary"
          exit 0
      fi
      echo "Will promote rhcos istag/machine-os-content:4.1 ($from), to ocp-s390x istag/4.1-art-latest:machine-os-content (currently value: $to)"

      # error out if the image isn't on quay
      to_quay="quay.io/openshift-release-dev/ocp-v4.0-art-dev@$from"
      if ! oc image info -a "/usr/local/pull-secret/.dockerconfigjson" "$to_quay"; then
          echo "error: The source image has not been pushed to quay; missing $to_quay"
          exit 1
      fi

      # verify the tests pass
      ci-operator $@

      # also tag the image into the art-latest stream
      oc tag "$to_quay" "ocp-s390x/4.1-art-latest:machine-os-content"

      if [[ "False" == "True" && "s390x" == "x86_64"]]; then
          # also tag the image into the ocp private stream
          oc tag "$to_quay" "ocp-private/4.1-priv:machine-os-content"
      fi
    env:
    - name: CLUSTER_TYPE
      value: aws
    - name: CONFIG_SPEC
      value: |
        base_images:
          machine-os-content:
            name: machine-os-content
            namespace: rhcos
            tag: 4.1-s390x
        build_root:
          image_stream_tag:
            name: release
            namespace: openshift
            tag: golang-1.12
        promotion:
          additional_images:
            machine-os-content: machine-os-content
          name: '4.1'
          namespace: ocp-s390x
        raw_steps:
        - output_image_tag_step:
            from: machine-os-content
            to:
              name: stable
              tag: machine-os-content
        resources:
          '*':
            limits:
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 200Mi
        tag_specification:
          name: '4.1'
          namespace: ocp-s390x
        tests:
        - as: e2e-aws
          commands: TEST_SUITE=openshift/conformance/parallel run-tests
          openshift_installer:
            cluster_profile: aws
    - name: JOB_NAME_SAFE
      value: e2e-aws
    - name: TEST_COMMAND
      value: TEST_SUITE=openshift/conformance/parallel run-tests
    image: ci-operator:latest
    imagePullPolicy: Always
    name: ''
    resources:
      requests:
        cpu: 10m
    volumeMounts:
    - mountPath: /etc/apici
      name: apici-ci-operator-credentials
      readOnly: true
    - mountPath: /etc/boskos
      name: boskos
      readOnly: true
    - mountPath: /usr/local/e2e-aws-cluster-profile
      name: cluster-profile
    - mountPath: /usr/local/e2e-aws
      name: job-definition
      subPath: cluster-launch-installer-e2e.yaml
    - mountPath: /usr/local/pull-secret
      name: release-pull-secret
  serviceAccountName: ci-operator
  volumes:
  - name: apici-ci-operator-credentials
    secret:
      items:
      - key: sa.ci-operator.apici.config
        path: kubeconfig
      secretName: apici-ci-operator-credentials
  - name: boskos
    secret:
      items:
      - key: password
        path: password
      secretName: boskos-credentials
  - name: cluster-profile
    projected:
      sources:
      - secret:
          name: cluster-secrets-aws
  - configMap:
      name: prow-job-cluster-launch-installer-e2e
    name: job-definition
  - name: pull-secret
    secret:
      secretName: regcred
  - name: release-pull-secret
    secret:
      secretName: ci-pull-credentials
---
#---------------------------------------------------------------------------------
# machine_os_content_promotions.py added the following resource
#---------------------------------------------------------------------------------

# The RHCOS build pipeline promotes images to the api.ci rhcos namespace into an is/machine-os-content. 
# In order to validate this image and promote it into the actual release payloads (ART and CI), this
# job runs tests against the machine-os-content image and then pushes it to the various locations to begin using it.
agent: kubernetes
cluster: api.ci
decorate: true
hidden: false
interval: 15m
labels:
  ci.openshift.io/release-type: informing
  job-release: '4.1'
name: promote-release-openshift-machine-os-content-e2e-aws-4.1-ppc64le
spec:
  containers:
  - args:
    - --artifact-dir=$(ARTIFACTS)
    - --kubeconfig=/etc/apici/kubeconfig
    - --lease-server-password-file=/etc/boskos/password
    - --lease-server-username=ci
    - --lease-server=https://boskos-ci.svc.ci.openshift.org
    - --secret-dir=/usr/local/pull-secret
    - --secret-dir=/usr/local/e2e-aws-cluster-profile
    - --template=/usr/local/e2e-aws
    - --input-hash=$(BUILD_ID) --input-hash=$(JOB_NAME)
    - --promote
    command:
    - /bin/bash
    - -c
    - |2

      #!/bin/bash
      set -euo pipefail

      # NOTE: This is generated bash. This is why you will see literals compared against other literals.

      # prow doesn't allow init containers or a second container
      export PATH=$PATH:/tmp/bin
      mkdir /tmp/bin
      curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.5/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
      chmod ug+x /tmp/bin/oc

      # if the source and destination are identical, do nothing
      from=$( oc get istag --ignore-not-found -n "rhcos" "machine-os-content:4.1" -o template='{{ .image.metadata.name }}' )

      if [[ -z "$from" ]]; then
          echo "There is currently no rhcos istag/machine-os-content:4.1 image available"
          if [[ "ppc64le" == "x86_64" ]]; then
              echo "error: This is an error for x86_64 for visibility"
              exit 1
          else
              echo "info: This is not considered an error since the arch may not be building for this release"
              exit 0
          fi
      fi

      to=$( oc get istag --ignore-not-found -n ocp-ppc64le "4.1-art-latest:machine-os-content" -o template='{{ .image.metadata.name }}' )
      if [[ "$from" == "$to" ]]; then
          echo "info: rhcos istag/machine-os-content:4.1 matches ocp-ppc64le istag/4.1-art-latest:machine-os-content (currently $to); no action necessary"
          exit 0
      fi
      echo "Will promote rhcos istag/machine-os-content:4.1 ($from), to ocp-ppc64le istag/4.1-art-latest:machine-os-content (currently value: $to)"

      # error out if the image isn't on quay
      to_quay="quay.io/openshift-release-dev/ocp-v4.0-art-dev@$from"
      if ! oc image info -a "/usr/local/pull-secret/.dockerconfigjson" "$to_quay"; then
          echo "error: The source image has not been pushed to quay; missing $to_quay"
          exit 1
      fi

      # verify the tests pass
      ci-operator $@

      # also tag the image into the art-latest stream
      oc tag "$to_quay" "ocp-ppc64le/4.1-art-latest:machine-os-content"

      if [[ "False" == "True" && "ppc64le" == "x86_64"]]; then
          # also tag the image into the ocp private stream
          oc tag "$to_quay" "ocp-private/4.1-priv:machine-os-content"
      fi
    env:
    - name: CLUSTER_TYPE
      value: aws
    - name: CONFIG_SPEC
      value: |
        base_images:
          machine-os-content:
            name: machine-os-content
            namespace: rhcos
            tag: 4.1-ppc64le
        build_root:
          image_stream_tag:
            name: release
            namespace: openshift
            tag: golang-1.12
        promotion:
          additional_images:
            machine-os-content: machine-os-content
          name: '4.1'
          namespace: ocp-ppc64le
        raw_steps:
        - output_image_tag_step:
            from: machine-os-content
            to:
              name: stable
              tag: machine-os-content
        resources:
          '*':
            limits:
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 200Mi
        tag_specification:
          name: '4.1'
          namespace: ocp-ppc64le
        tests:
        - as: e2e-aws
          commands: TEST_SUITE=openshift/conformance/parallel run-tests
          openshift_installer:
            cluster_profile: aws
    - name: JOB_NAME_SAFE
      value: e2e-aws
    - name: TEST_COMMAND
      value: TEST_SUITE=openshift/conformance/parallel run-tests
    image: ci-operator:latest
    imagePullPolicy: Always
    name: ''
    resources:
      requests:
        cpu: 10m
    volumeMounts:
    - mountPath: /etc/apici
      name: apici-ci-operator-credentials
      readOnly: true
    - mountPath: /etc/boskos
      name: boskos
      readOnly: true
    - mountPath: /usr/local/e2e-aws-cluster-profile
      name: cluster-profile
    - mountPath: /usr/local/e2e-aws
      name: job-definition
      subPath: cluster-launch-installer-e2e.yaml
    - mountPath: /usr/local/pull-secret
      name: release-pull-secret
  serviceAccountName: ci-operator
  volumes:
  - name: apici-ci-operator-credentials
    secret:
      items:
      - key: sa.ci-operator.apici.config
        path: kubeconfig
      secretName: apici-ci-operator-credentials
  - name: boskos
    secret:
      items:
      - key: password
        path: password
      secretName: boskos-credentials
  - name: cluster-profile
    projected:
      sources:
      - secret:
          name: cluster-secrets-aws
  - configMap:
      name: prow-job-cluster-launch-installer-e2e
    name: job-definition
  - name: pull-secret
    secret:
      secretName: regcred
  - name: release-pull-secret
    secret:
      secretName: ci-pull-credentials
---
#---------------------------------------------------------------------------------
# machine_os_content_promotions.py added the following resource
#---------------------------------------------------------------------------------

# The RHCOS build pipeline promotes images to the api.ci rhcos namespace into an is/machine-os-content. 
# In order to validate this image and promote it into the actual release payloads (ART and CI), this
# job runs tests against the machine-os-content image and then pushes it to the various locations to begin using it.
agent: kubernetes
cluster: api.ci
decorate: true
hidden: true
interval: 15m
labels:
  ci.openshift.io/release-type: informing
  job-release: '4.1'
name: promote-release-openshift-machine-os-content-e2e-aws-4.1-priv
spec:
  containers:
  - args:
    - --artifact-dir=$(ARTIFACTS)
    - --kubeconfig=/etc/apici/kubeconfig
    - --lease-server-password-file=/etc/boskos/password
    - --lease-server-username=ci
    - --lease-server=https://boskos-ci.svc.ci.openshift.org
    - --secret-dir=/usr/local/pull-secret
    - --secret-dir=/usr/local/e2e-aws-cluster-profile
    - --template=/usr/local/e2e-aws
    - --input-hash=$(BUILD_ID) --input-hash=$(JOB_NAME)
    - --promote
    command:
    - /bin/bash
    - -c
    - |2

      #!/bin/bash
      set -euo pipefail

      # NOTE: This is generated bash. This is why you will see literals compared against other literals.

      # prow doesn't allow init containers or a second container
      export PATH=$PATH:/tmp/bin
      mkdir /tmp/bin
      curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.5/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
      chmod ug+x /tmp/bin/oc

      # if the source and destination are identical, do nothing
      from=$( oc get istag --ignore-not-found -n "rhcos" "machine-os-content:4.1" -o template='{{ .image.metadata.name }}' )

      if [[ -z "$from" ]]; then
          echo "There is currently no rhcos istag/machine-os-content:4.1 image available"
          if [[ "x86_64" == "x86_64" ]]; then
              echo "error: This is an error for x86_64 for visibility"
              exit 1
          else
              echo "info: This is not considered an error since the arch may not be building for this release"
              exit 0
          fi
      fi

      to=$( oc get istag --ignore-not-found -n ocp-priv "4.1-art-latest-priv:machine-os-content" -o template='{{ .image.metadata.name }}' )
      if [[ "$from" == "$to" ]]; then
          echo "info: rhcos istag/machine-os-content:4.1 matches ocp-priv istag/4.1-art-latest-priv:machine-os-content (currently $to); no action necessary"
          exit 0
      fi
      echo "Will promote rhcos istag/machine-os-content:4.1 ($from), to ocp-priv istag/4.1-art-latest-priv:machine-os-content (currently value: $to)"

      # error out if the image isn't on quay
      to_quay="quay.io/openshift-release-dev/ocp-v4.0-art-dev@$from"
      if ! oc image info -a "/usr/local/pull-secret/.dockerconfigjson" "$to_quay"; then
          echo "error: The source image has not been pushed to quay; missing $to_quay"
          exit 1
      fi

      # verify the tests pass
      ci-operator $@

      # also tag the image into the art-latest stream
      oc tag "$to_quay" "ocp-priv/4.1-art-latest-priv:machine-os-content"

      if [[ "True" == "True" && "x86_64" == "x86_64"]]; then
          # also tag the image into the ocp private stream
          oc tag "$to_quay" "ocp-private/4.1-priv:machine-os-content"
      fi
    env:
    - name: CLUSTER_TYPE
      value: aws
    - name: CONFIG_SPEC
      value: |
        base_images:
          machine-os-content:
            name: machine-os-content
            namespace: rhcos
            tag: '4.1'
        build_root:
          image_stream_tag:
            name: release
            namespace: openshift
            tag: golang-1.12
        promotion:
          additional_images:
            machine-os-content: machine-os-content
          name: '4.1'
          namespace: ocp-priv
        raw_steps:
        - output_image_tag_step:
            from: machine-os-content
            to:
              name: stable
              tag: machine-os-content
        resources:
          '*':
            limits:
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 200Mi
        tag_specification:
          name: '4.1'
          namespace: ocp-priv
        tests:
        - as: e2e-aws
          commands: TEST_SUITE=openshift/conformance/parallel run-tests
          openshift_installer:
            cluster_profile: aws
    - name: JOB_NAME_SAFE
      value: e2e-aws
    - name: TEST_COMMAND
      value: TEST_SUITE=openshift/conformance/parallel run-tests
    image: ci-operator:latest
    imagePullPolicy: Always
    name: ''
    resources:
      requests:
        cpu: 10m
    volumeMounts:
    - mountPath: /etc/apici
      name: apici-ci-operator-credentials
      readOnly: true
    - mountPath: /etc/boskos
      name: boskos
      readOnly: true
    - mountPath: /usr/local/e2e-aws-cluster-profile
      name: cluster-profile
    - mountPath: /usr/local/e2e-aws
      name: job-definition
      subPath: cluster-launch-installer-e2e.yaml
    - mountPath: /usr/local/pull-secret
      name: release-pull-secret
  serviceAccountName: ci-operator
  volumes:
  - name: apici-ci-operator-credentials
    secret:
      items:
      - key: sa.ci-operator.apici.config
        path: kubeconfig
      secretName: apici-ci-operator-credentials
  - name: boskos
    secret:
      items:
      - key: password
        path: password
      secretName: boskos-credentials
  - name: cluster-profile
    projected:
      sources:
      - secret:
          name: cluster-secrets-aws
  - configMap:
      name: prow-job-cluster-launch-installer-e2e
    name: job-definition
  - name: pull-secret
    secret:
      secretName: regcred
  - name: release-pull-secret
    secret:
      secretName: ci-pull-credentials
---
#---------------------------------------------------------------------------------
# machine_os_content_promotions.py added the following resource
#---------------------------------------------------------------------------------

# The RHCOS build pipeline promotes images to the api.ci rhcos namespace into an is/machine-os-content. 
# In order to validate this image and promote it into the actual release payloads (ART and CI), this
# job runs tests against the machine-os-content image and then pushes it to the various locations to begin using it.
agent: kubernetes
cluster: api.ci
decorate: true
hidden: true
interval: 15m
labels:
  ci.openshift.io/release-type: informing
  job-release: '4.1'
name: promote-release-openshift-machine-os-content-e2e-aws-4.1-s390x-priv
spec:
  containers:
  - args:
    - --artifact-dir=$(ARTIFACTS)
    - --kubeconfig=/etc/apici/kubeconfig
    - --lease-server-password-file=/etc/boskos/password
    - --lease-server-username=ci
    - --lease-server=https://boskos-ci.svc.ci.openshift.org
    - --secret-dir=/usr/local/pull-secret
    - --secret-dir=/usr/local/e2e-aws-cluster-profile
    - --template=/usr/local/e2e-aws
    - --input-hash=$(BUILD_ID) --input-hash=$(JOB_NAME)
    - --promote
    command:
    - /bin/bash
    - -c
    - |2

      #!/bin/bash
      set -euo pipefail

      # NOTE: This is generated bash. This is why you will see literals compared against other literals.

      # prow doesn't allow init containers or a second container
      export PATH=$PATH:/tmp/bin
      mkdir /tmp/bin
      curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.5/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
      chmod ug+x /tmp/bin/oc

      # if the source and destination are identical, do nothing
      from=$( oc get istag --ignore-not-found -n "rhcos" "machine-os-content:4.1" -o template='{{ .image.metadata.name }}' )

      if [[ -z "$from" ]]; then
          echo "There is currently no rhcos istag/machine-os-content:4.1 image available"
          if [[ "s390x" == "x86_64" ]]; then
              echo "error: This is an error for x86_64 for visibility"
              exit 1
          else
              echo "info: This is not considered an error since the arch may not be building for this release"
              exit 0
          fi
      fi

      to=$( oc get istag --ignore-not-found -n ocp-s390x-priv "4.1-art-latest-priv:machine-os-content" -o template='{{ .image.metadata.name }}' )
      if [[ "$from" == "$to" ]]; then
          echo "info: rhcos istag/machine-os-content:4.1 matches ocp-s390x-priv istag/4.1-art-latest-priv:machine-os-content (currently $to); no action necessary"
          exit 0
      fi
      echo "Will promote rhcos istag/machine-os-content:4.1 ($from), to ocp-s390x-priv istag/4.1-art-latest-priv:machine-os-content (currently value: $to)"

      # error out if the image isn't on quay
      to_quay="quay.io/openshift-release-dev/ocp-v4.0-art-dev@$from"
      if ! oc image info -a "/usr/local/pull-secret/.dockerconfigjson" "$to_quay"; then
          echo "error: The source image has not been pushed to quay; missing $to_quay"
          exit 1
      fi

      # verify the tests pass
      ci-operator $@

      # also tag the image into the art-latest stream
      oc tag "$to_quay" "ocp-s390x-priv/4.1-art-latest-priv:machine-os-content"

      if [[ "True" == "True" && "s390x" == "x86_64"]]; then
          # also tag the image into the ocp private stream
          oc tag "$to_quay" "ocp-private/4.1-priv:machine-os-content"
      fi
    env:
    - name: CLUSTER_TYPE
      value: aws
    - name: CONFIG_SPEC
      value: |
        base_images:
          machine-os-content:
            name: machine-os-content
            namespace: rhcos
            tag: 4.1-s390x
        build_root:
          image_stream_tag:
            name: release
            namespace: openshift
            tag: golang-1.12
        promotion:
          additional_images:
            machine-os-content: machine-os-content
          name: '4.1'
          namespace: ocp-s390x-priv
        raw_steps:
        - output_image_tag_step:
            from: machine-os-content
            to:
              name: stable
              tag: machine-os-content
        resources:
          '*':
            limits:
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 200Mi
        tag_specification:
          name: '4.1'
          namespace: ocp-s390x-priv
        tests:
        - as: e2e-aws
          commands: TEST_SUITE=openshift/conformance/parallel run-tests
          openshift_installer:
            cluster_profile: aws
    - name: JOB_NAME_SAFE
      value: e2e-aws
    - name: TEST_COMMAND
      value: TEST_SUITE=openshift/conformance/parallel run-tests
    image: ci-operator:latest
    imagePullPolicy: Always
    name: ''
    resources:
      requests:
        cpu: 10m
    volumeMounts:
    - mountPath: /etc/apici
      name: apici-ci-operator-credentials
      readOnly: true
    - mountPath: /etc/boskos
      name: boskos
      readOnly: true
    - mountPath: /usr/local/e2e-aws-cluster-profile
      name: cluster-profile
    - mountPath: /usr/local/e2e-aws
      name: job-definition
      subPath: cluster-launch-installer-e2e.yaml
    - mountPath: /usr/local/pull-secret
      name: release-pull-secret
  serviceAccountName: ci-operator
  volumes:
  - name: apici-ci-operator-credentials
    secret:
      items:
      - key: sa.ci-operator.apici.config
        path: kubeconfig
      secretName: apici-ci-operator-credentials
  - name: boskos
    secret:
      items:
      - key: password
        path: password
      secretName: boskos-credentials
  - name: cluster-profile
    projected:
      sources:
      - secret:
          name: cluster-secrets-aws
  - configMap:
      name: prow-job-cluster-launch-installer-e2e
    name: job-definition
  - name: pull-secret
    secret:
      secretName: regcred
  - name: release-pull-secret
    secret:
      secretName: ci-pull-credentials
---
#---------------------------------------------------------------------------------
# machine_os_content_promotions.py added the following resource
#---------------------------------------------------------------------------------

# The RHCOS build pipeline promotes images to the api.ci rhcos namespace into an is/machine-os-content. 
# In order to validate this image and promote it into the actual release payloads (ART and CI), this
# job runs tests against the machine-os-content image and then pushes it to the various locations to begin using it.
agent: kubernetes
cluster: api.ci
decorate: true
hidden: true
interval: 15m
labels:
  ci.openshift.io/release-type: informing
  job-release: '4.1'
name: promote-release-openshift-machine-os-content-e2e-aws-4.1-ppc64le-priv
spec:
  containers:
  - args:
    - --artifact-dir=$(ARTIFACTS)
    - --kubeconfig=/etc/apici/kubeconfig
    - --lease-server-password-file=/etc/boskos/password
    - --lease-server-username=ci
    - --lease-server=https://boskos-ci.svc.ci.openshift.org
    - --secret-dir=/usr/local/pull-secret
    - --secret-dir=/usr/local/e2e-aws-cluster-profile
    - --template=/usr/local/e2e-aws
    - --input-hash=$(BUILD_ID) --input-hash=$(JOB_NAME)
    - --promote
    command:
    - /bin/bash
    - -c
    - |2

      #!/bin/bash
      set -euo pipefail

      # NOTE: This is generated bash. This is why you will see literals compared against other literals.

      # prow doesn't allow init containers or a second container
      export PATH=$PATH:/tmp/bin
      mkdir /tmp/bin
      curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.5/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
      chmod ug+x /tmp/bin/oc

      # if the source and destination are identical, do nothing
      from=$( oc get istag --ignore-not-found -n "rhcos" "machine-os-content:4.1" -o template='{{ .image.metadata.name }}' )

      if [[ -z "$from" ]]; then
          echo "There is currently no rhcos istag/machine-os-content:4.1 image available"
          if [[ "ppc64le" == "x86_64" ]]; then
              echo "error: This is an error for x86_64 for visibility"
              exit 1
          else
              echo "info: This is not considered an error since the arch may not be building for this release"
              exit 0
          fi
      fi

      to=$( oc get istag --ignore-not-found -n ocp-ppc64le-priv "4.1-art-latest-priv:machine-os-content" -o template='{{ .image.metadata.name }}' )
      if [[ "$from" == "$to" ]]; then
          echo "info: rhcos istag/machine-os-content:4.1 matches ocp-ppc64le-priv istag/4.1-art-latest-priv:machine-os-content (currently $to); no action necessary"
          exit 0
      fi
      echo "Will promote rhcos istag/machine-os-content:4.1 ($from), to ocp-ppc64le-priv istag/4.1-art-latest-priv:machine-os-content (currently value: $to)"

      # error out if the image isn't on quay
      to_quay="quay.io/openshift-release-dev/ocp-v4.0-art-dev@$from"
      if ! oc image info -a "/usr/local/pull-secret/.dockerconfigjson" "$to_quay"; then
          echo "error: The source image has not been pushed to quay; missing $to_quay"
          exit 1
      fi

      # verify the tests pass
      ci-operator $@

      # also tag the image into the art-latest stream
      oc tag "$to_quay" "ocp-ppc64le-priv/4.1-art-latest-priv:machine-os-content"

      if [[ "True" == "True" && "ppc64le" == "x86_64"]]; then
          # also tag the image into the ocp private stream
          oc tag "$to_quay" "ocp-private/4.1-priv:machine-os-content"
      fi
    env:
    - name: CLUSTER_TYPE
      value: aws
    - name: CONFIG_SPEC
      value: |
        base_images:
          machine-os-content:
            name: machine-os-content
            namespace: rhcos
            tag: 4.1-ppc64le
        build_root:
          image_stream_tag:
            name: release
            namespace: openshift
            tag: golang-1.12
        promotion:
          additional_images:
            machine-os-content: machine-os-content
          name: '4.1'
          namespace: ocp-ppc64le-priv
        raw_steps:
        - output_image_tag_step:
            from: machine-os-content
            to:
              name: stable
              tag: machine-os-content
        resources:
          '*':
            limits:
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 200Mi
        tag_specification:
          name: '4.1'
          namespace: ocp-ppc64le-priv
        tests:
        - as: e2e-aws
          commands: TEST_SUITE=openshift/conformance/parallel run-tests
          openshift_installer:
            cluster_profile: aws
    - name: JOB_NAME_SAFE
      value: e2e-aws
    - name: TEST_COMMAND
      value: TEST_SUITE=openshift/conformance/parallel run-tests
    image: ci-operator:latest
    imagePullPolicy: Always
    name: ''
    resources:
      requests:
        cpu: 10m
    volumeMounts:
    - mountPath: /etc/apici
      name: apici-ci-operator-credentials
      readOnly: true
    - mountPath: /etc/boskos
      name: boskos
      readOnly: true
    - mountPath: /usr/local/e2e-aws-cluster-profile
      name: cluster-profile
    - mountPath: /usr/local/e2e-aws
      name: job-definition
      subPath: cluster-launch-installer-e2e.yaml
    - mountPath: /usr/local/pull-secret
      name: release-pull-secret
  serviceAccountName: ci-operator
  volumes:
  - name: apici-ci-operator-credentials
    secret:
      items:
      - key: sa.ci-operator.apici.config
        path: kubeconfig
      secretName: apici-ci-operator-credentials
  - name: boskos
    secret:
      items:
      - key: password
        path: password
      secretName: boskos-credentials
  - name: cluster-profile
    projected:
      sources:
      - secret:
          name: cluster-secrets-aws
  - configMap:
      name: prow-job-cluster-launch-installer-e2e
    name: job-definition
  - name: pull-secret
    secret:
      secretName: regcred
  - name: release-pull-secret
    secret:
      secretName: ci-pull-credentials
